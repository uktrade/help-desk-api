[tool.poetry]
name = "help-desk-service"
version = "0.1.0"
description = ""
authors = ["Ross Miller <ross.miller@digital.trade.gov.uk>"]
license = "MIT"

[tool.poetry.dependencies]
python = "3.10.*"
Django = "^4.2.15"
djangorestframework = "^3.15.2"
Markdown = "^3.4.1"
django-model-utils = "^4.2.0"
zenpy = "^2.0.25"
django-multiselectfield = "^0.1.12"
gunicorn = "22.0.0"
django-environ = "^0.11.0"
gevent = "^24.0.0"
whitenoise = "^6.4.0"
uritemplate = "^4.1.1"
pyyaml = "^6.0"
sentry-sdk = "^2.8.0"
pydantic = "^2.0.0"
debugpy = "^1.6.7"
drf-yasg = "^1.21.7"
drf-spectacular = "^0.27.0"
waitress = "2.1.2"
boto3 = "^1.28.43"
aws-lambda-powertools = "^2.23.1"
elastic-apm = "^6.21.4.post8347027212"
django-log-formatter-asim = "^0.0.4"
psycopg2-binary = "^2.9.9"
dbt-copilot-python = "^0.2.1"
dj-database-url = "^2.1.0"

[tool.poetry.dev-dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pytest-django = "^4.8.0"
django-extensions = "^3.2.1"
flake8 = "^7.0.0"
black = "^24.0.0"
isort = "^5.10.1"
mypy = "^1.9.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
# 'extend-exclude' excludes files or directories in addition to the defaults

[tool.djlint]
ignore="H017,H030,H031"

[tool.coverage.run]
branch = true
source = ["."]
omit = [
    "*__init__*",
    "*/migrations/*",
    "*/fixture_data/*",
    "*conftest.py",
    "*manage.py",
    "*apps.py",
    "*/management/*",
    "scripts/*.py",
    "email_router/*",
    "config/asgi.py",
    "config/wsgi.py",
    "config/settings/*",
    "help_desk_api/utils/document_generation/*",
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "except ValidationError as e:",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # We want to check coverage of tests, but not skipped ones
    "@skip",
]
